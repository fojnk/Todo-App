basePath: /
definitions:
  models.TodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
  models.TodoList:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - description
    - title
    type: object
  models.User:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  transport.InputAuth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  transport.transort_error:
    properties:
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a simple version of todo app.
  title: Todo App Api
  version: "1.0"
paths:
  /api/lists/:
    get:
      consumes:
      - application/json
      description: Get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Get all lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: create todo list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Create todo list
      tags:
      - lists
  /api/lists/{id}:
    delete:
      consumes:
      - application/json
      description: Delete list by Id
      operationId: delete-list
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Delete list
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: Get todo list by Id
      operationId: get-list-by-id
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Get list by Id
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: Update list by Id
      operationId: update-list
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Update list
      tags:
      - lists
  /api/lists/{list_id}/:
    get:
      consumes:
      - application/json
      description: Get all items
      operationId: get-all-items
      parameters:
      - description: List ID
        in: path
        name: list_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create item
      operationId: create-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoItem'
      - description: List ID
        in: path
        name: list_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Create item
      tags:
      - items
  /api/lists/{list_id}/{item_id}:
    delete:
      consumes:
      - application/json
      description: Delete item by Id
      operationId: delete-item-by-id
      parameters:
      - description: List ID
        in: path
        name: list_id
        required: true
        type: integer
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Delete item by Id
      tags:
      - items
    get:
      consumes:
      - application/json
      description: Get item by Id
      operationId: get-item-by-id
      parameters:
      - description: List ID
        in: path
        name: list_id
        required: true
        type: integer
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Get item by Id
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update item by Id
      operationId: update-item
      parameters:
      - description: List ID
        in: path
        name: list_id
        required: true
        type: integer
      - description: Item ID
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      security:
      - ApiKeyAuth: []
      summary: Update item
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login to account
      operationId: login-to-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/transport.InputAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/transport.transort_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/transport.transort_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/transport.transort_error'
        default:
          description: ""
          schema:
            $ref: '#/definitions/transport.transort_error'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
